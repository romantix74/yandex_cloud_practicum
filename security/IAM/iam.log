В реализованной в Yandex.Cloud ролевой модели имеется два типа ролей: примитивные (общие для всех сервисов) и сервисные (выдаются только на один сервис). Сервисные роли зависят от специфики каждого отдельного сервиса и могут назначаться на объекты, для которых эти роли предназначены. Некоторые сервисные роли назначаются на ресурс (например, на ключ шифрования в сервисе KMS), а некоторые — только на контейнер, в котором размещены ресурсы (например, роль compute.admin назначается на каталог или облако).
К примитивным ролям относятся:
	viewer — позволяет просматривать информацию о ресурсе или список ресурсов, если назначена на каталог;
	editor — позволяет управлять ресурсами: создавать, изменять и удалять объекты;
	admin — позволяет управлять ресурсами и правами доступа к ним.

Иными словами, ограничить список разрешений, унаследованных от родительского
ресурса, на уровне дочернего не получится.

Роли наследуются: все разрешения от родительского ресурса переходят на его
 дочерние ресурсы. Например, если назначить пользователю роль на каталог, в котором
 есть виртуальная машина, то все разрешения этой роли будут действовать и
 для виртуальной машины.

Роль — это набор разрешений, которые описывают допустимые операции над ресурсом.
После назначения пользователю роли на ресурс он сможет выполнять заданный набор
операций над этим ресурсом.
Роли на ресурс назначаются в виде списка связей «роль — субъект».
Такие связи называются привязками прав доступа (access bindings), их можно добавлять
и удалять, то есть контролировать права доступа к ресурсу.

применяют ролевую модель управления доступом — RBAC (Role Based Access Control).
То есть каждому пользователю можно назначить определенную роль для доступа к тому \
или иному ресурсу.
№№№ Ресурсная модель и права доступа №№№№

Тип 3. Аутентифицированные пользователи могут выполнять операции с облаком не только под своими пользовательскими аккаунтами, но и через сервисные аккаунты.
Сервисные аккаунты — это специальный тип аккаунтов, которые используются для
доступа к ресурсам Yandex.Cloud от имени приложений. Также под сервисными
аккаунтами могут выполнять операции облачные функции и сервисы, которые запущены
в виртуальных машинах.

	Аутентификацию сервисного аккаунта можно выполнять тремя способами:
	Авторизационные ключи доступа. Используются для получения IAM-токена с помощью открытого и секретного ключа. Этот способ вы примените в следующей практической работе.
	API-ключи. Используются в некоторых сервисах для упрощённой аутентификации вместо IAM-токена. Могут пригодиться для работы с сервисами SpeechKit, Vision и Translate.
	Статические ключи доступа. Необходимы при использовании AWS-совместимых сервисов.

Тип 2. Федерация удостоверений. Удостоверения (credentials) — это информация об
атрибутах пользователей, таких как логин или адрес электронной почты,
и способах аутентификации. При использовании федерации удостоверений они хранятся
не у облачного провайдера, а у третьей доверенной стороны — поставщика удостоверений
 (IdP, Identity Provider).
	Пользователь хочет открыть в браузере консоль управления Yandex.Cloud.
	Если пользователь уже проходил аутентификацию и время жизни cookie в его браузере не истекло, то он переходит на главную страницу консоли управления. Если это не так, то консоль отправляет его на сервер поставщика удостоверений для аутентификации.
	Пользователь переходит на страницу аутентификации на сервере поставщика удостоверений и вводит свои логин и пароль.
	Если аутентификация прошла успешно, сервер поставщика удостоверений переадресует пользователя обратно на страницу входа в консоль управления.
	Поставщик удостоверений направляет сервису IAM облака подписанное сообщение (SAML Response) с информацией о том, что пользователь прошел аутентификацию.

Тип 1. Учетная запись Яндекс ID.

Теперь рассмотрим, как получить доступ к ресурсам Yandex.Cloud. Предусмотрены три типа аккаунтов.


